/*
 * Copyright (C) 2016 Freescale Semiconductor, Inc.
 * Copyright 2017 NXP
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/dts-v1/;

/* First 128KB is for PSCI ATF. */
/memreserve/ 0x40000000 0x00020000;

#include "fsl-imx8mq.dtsi"

/ {
	model = "Winsystem i.MX8MQ PICOITX";
	compatible = "fsl,imx8mq";

	dbg_console_settings: chosen {
		bootargs = "console=ttymxc0,115200 earlycon=ec_imx6q,0x30860000,115200";
		stdout-path = &uart1;
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_usdhc2_vmmc: usdhc2_vmmc {
			compatible = "regulator-fixed";
			regulator-name = "VSD_3V3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};
	};

	sound_wm8960: sound-wm8960 {
		compatible = "fsl,imx-audio-wm8960";
		model = "wm8960-audio";
		cpu-dai = <&sai2>;
		audio-codec = <&audio_codec>;
		codec-master;
		audio-routing =
			"Headphone Jack", "HP_L",
			"Headphone Jack", "HP_R",
			"Ext Spk", "SPK_LP",
			"Ext Spk", "SPK_LN",
			"Ext Spk", "SPK_RP",
			"Ext Spk", "SPK_RN",
			"RINPUT3", "Mic Jack",
			"LINPUT3", "Mic Jack",
			"RINPUT2", "Main MIC",
			"LINPUT2", "Main MIC",
			"Mic Jack", "MICB",
			"Main MIC", "MICB";
	};
};

&iomuxc {
	pinctrl-names = "default";

	imx8mq-evk {
		pinctrl_pmic: pmicgrp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI1_MCLK_GPIO4_IO20	0x19
			>;
		};

		pinctrl_fec1: fec1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_ENET_MDC_ENET1_MDC		0x3
				MX8MQ_IOMUXC_ENET_MDIO_ENET1_MDIO	0x23
				MX8MQ_IOMUXC_ENET_TD3_ENET1_RGMII_TD3	0x1f
				MX8MQ_IOMUXC_ENET_TD2_ENET1_RGMII_TD2	0x1f
				MX8MQ_IOMUXC_ENET_TD1_ENET1_RGMII_TD1	0x1f
				MX8MQ_IOMUXC_ENET_TD0_ENET1_RGMII_TD0	0x1f
				MX8MQ_IOMUXC_ENET_RD3_ENET1_RGMII_RD3	0x91
				MX8MQ_IOMUXC_ENET_RD2_ENET1_RGMII_RD2	0x91
				MX8MQ_IOMUXC_ENET_RD1_ENET1_RGMII_RD1	0x91
				MX8MQ_IOMUXC_ENET_RD0_ENET1_RGMII_RD0	0x91
				MX8MQ_IOMUXC_ENET_TXC_ENET1_RGMII_TXC	0x1f
				MX8MQ_IOMUXC_ENET_RXC_ENET1_RGMII_RXC	0x91
				MX8MQ_IOMUXC_ENET_RX_CTL_ENET1_RGMII_RX_CTL 0x91
				MX8MQ_IOMUXC_ENET_TX_CTL_ENET1_RGMII_TX_CTL 0x1f
				MX8MQ_IOMUXC_SAI1_RXFS_GPIO4_IO0	0x19
				MX8MQ_IOMUXC_SAI1_RXC_GPIO4_IO1		0x19
			>;
		};

		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C1_SCL_I2C1_SCL	0x4000007f
				MX8MQ_IOMUXC_I2C1_SDA_I2C1_SDA	0x4000007f
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C2_SCL_I2C2_SCL	0x4000007f
				MX8MQ_IOMUXC_I2C2_SDA_I2C2_SDA	0x4000007f
			>;
		};

		pinctrl_pcie0: pcie0grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C4_SCL_GPIO5_IO20	0x16
				MX8MQ_IOMUXC_SAI3_RXC_GPIO4_IO29	0x16
				MX8MQ_IOMUXC_SAI3_RXD_GPIO4_IO30	0x16
				/* SMB_ALERT_N */
				MX8MQ_IOMUXC_SAI3_TXD_GPIO5_IO1		0x16
			>;
		};

		pinctrl_pcie1: pcie1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_I2C4_SDA_GPIO5_IO21	0x16
				MX8MQ_IOMUXC_SAI3_TXC_GPIO5_IO0		0x16
				MX8MQ_IOMUXC_SAI5_RXFS_GPIO3_IO19	0x16
				/* MPCIE_WAKE */
				MX8MQ_IOMUXC_SAI1_TXFS_GPIO4_IO10	0x16
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_UART1_RXD_UART1_DCE_RX	0x49
				MX8MQ_IOMUXC_UART1_TXD_UART1_DCE_TX	0x49
			>;
		};

		pinctrl_serial2_gpio: serial2grpgpio {
			fsl,pins = <
				MX8MQ_IOMUXC_NAND_DATA07_GPIO3_IO13	0x59
				MX8MQ_IOMUXC_NAND_DATA06_GPIO3_IO12	0x19
				MX8MQ_IOMUXC_NAND_DATA05_GPIO3_IO11	0x19
				MX8MQ_IOMUXC_NAND_DATA04_GPIO3_IO10	0x19
				MX8MQ_IOMUXC_NAND_DATA03_GPIO3_IO9	0x19
				MX8MQ_IOMUXC_NAND_DATA02_GPIO3_IO8	0x19
				MX8MQ_IOMUXC_NAND_DATA01_GPIO3_IO7	0x19
			>;
		};

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK		0x83
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD		0xc3
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0	0xc3
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1	0xc3
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2	0xc3
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3	0xc3
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4	0xc3
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5	0xc3
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6	0xc3
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7	0xc3
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE	0x83
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B	0xc1
			>;
		};

		pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK		0x85
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD		0xc5
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0	0xc5
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1	0xc5
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2	0xc5
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3	0xc5
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4	0xc5
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5	0xc5
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6	0xc5
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7	0xc5
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE	0x85
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B	0xc1
			>;
		};

		pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD1_CLK_USDHC1_CLK		0x87
				MX8MQ_IOMUXC_SD1_CMD_USDHC1_CMD		0xc7
				MX8MQ_IOMUXC_SD1_DATA0_USDHC1_DATA0	0xc7
				MX8MQ_IOMUXC_SD1_DATA1_USDHC1_DATA1	0xc7
				MX8MQ_IOMUXC_SD1_DATA2_USDHC1_DATA2	0xc7
				MX8MQ_IOMUXC_SD1_DATA3_USDHC1_DATA3	0xc7
				MX8MQ_IOMUXC_SD1_DATA4_USDHC1_DATA4	0xc7
				MX8MQ_IOMUXC_SD1_DATA5_USDHC1_DATA5	0xc7
				MX8MQ_IOMUXC_SD1_DATA6_USDHC1_DATA6	0xc7
				MX8MQ_IOMUXC_SD1_DATA7_USDHC1_DATA7	0xc7
				MX8MQ_IOMUXC_SD1_STROBE_USDHC1_STROBE	0x87
				MX8MQ_IOMUXC_SD1_RESET_B_USDHC1_RESET_B	0xc1
			>;
		};

		pinctrl_usdhc2_gpio: usdhc2grpgpio {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CD_B_GPIO2_IO12	0x41
				MX8MQ_IOMUXC_SD2_RESET_B_GPIO2_IO19	0x41
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK		0x83
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD		0xc3
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0	0xc3
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1	0xc3
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2	0xc3
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3	0xc3
				MX8MQ_IOMUXC_GPIO1_IO04_USDHC2_VSELECT	0xc1
			>;
		};

		pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK		0x85
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD		0xc5
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0	0xc5
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1	0xc5
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2	0xc5
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3	0xc5
				MX8MQ_IOMUXC_GPIO1_IO04_USDHC2_VSELECT	0xc1
			>;
		};

		pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
			fsl,pins = <
				MX8MQ_IOMUXC_SD2_CLK_USDHC2_CLK		0x87
				MX8MQ_IOMUXC_SD2_CMD_USDHC2_CMD		0xc7
				MX8MQ_IOMUXC_SD2_DATA0_USDHC2_DATA0	0xc7
				MX8MQ_IOMUXC_SD2_DATA1_USDHC2_DATA1	0xc7
				MX8MQ_IOMUXC_SD2_DATA2_USDHC2_DATA2	0xc7
				MX8MQ_IOMUXC_SD2_DATA3_USDHC2_DATA3	0xc7
				MX8MQ_IOMUXC_GPIO1_IO04_USDHC2_VSELECT	0xc1
			>;
		};

		pinctrl_sai2: sai2grp {
			fsl,pins = <
				MX8MQ_IOMUXC_SAI2_TXFS_SAI2_TX_SYNC	0xd6
				MX8MQ_IOMUXC_SAI2_TXC_SAI2_TX_BCLK	0xd6
				MX8MQ_IOMUXC_SAI2_MCLK_SAI2_MCLK	0xd6
				MX8MQ_IOMUXC_SAI2_TXD0_SAI2_TX_DATA0	0xd6
				MX8MQ_IOMUXC_SAI2_RXD0_SAI2_RX_DATA0	0xd6
				MX8MQ_IOMUXC_SAI2_RXFS_SAI2_RX_SYNC	0xd6
			>;
		};

		pinctrl_wdog: wdoggrp {
			fsl,pins = <
				MX8MQ_IOMUXC_GPIO1_IO02_WDOG1_WDOG_B 0xc6
			>;
		};
	};
};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec1>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	fsl,magic-packet;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@3 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <3>;
		};
	};
};

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	pmic: pfuze100@08 {
		compatible = "fsl,pfuze100";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_pmic>;
		reg = <0x08>;

		regulators {
			sw1a_reg: sw1ab {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				regulator-always-on;
			};

			sw1c_reg: sw1c {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				regulator-always-on;
			};

			sw2_reg: sw2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			sw3a_reg: sw3ab {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-always-on;
			};

			sw4_reg: sw4 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			swbst_reg: swbst {
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5150000>;
			};

			snvs_reg: vsnvs {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <3000000>;
				regulator-always-on;
			};

			vref_reg: vrefddr {
				regulator-always-on;
			};

			vgen1_reg: vgen1 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
			};

			vgen2_reg: vgen2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
				regulator-always-on;
			};

			vgen3_reg: vgen3 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen4_reg: vgen4 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen5_reg: vgen5 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen6_reg: vgen6 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
			};
		};
	};

	audio_codec: wm8960@1a {
		compatible = "wlf,wm8960";
		reg = <0x1a>;
		wlf,shared-lrclk;
		clocks = <&clk IMX8MQ_CLK_SAI2_ROOT>;
		clock-names = "mclk";
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "disabled";
};

&pcie0{
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie0>;
	clkreq-gpio = <&gpio5 20 GPIO_ACTIVE_LOW>;
	disable-gpio = <&gpio4 29 GPIO_ACTIVE_LOW>;
	reset-gpio = <&gpio4 30 GPIO_ACTIVE_LOW>;
	ext_osc = <1>;
	hard-wired = <1>;
	status = "okay";
};

&pcie1{
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie1>;
	clkreq-gpio = <&gpio5 21 GPIO_ACTIVE_LOW>;
	disable-gpio = <&gpio5 0 GPIO_ACTIVE_LOW>;
	reset-gpio = <&gpio3 19 GPIO_ACTIVE_LOW>;
	ext_osc = <1>;
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>, <&pinctrl_serial2_gpio>;
	assigned-clocks = <&clk IMX8MQ_CLK_UART1_SRC>;
	assigned-clock-parents = <&clk IMX8MQ_CLK_25M>;
	uart-has-rtscts;
	status = "okay";
};

&usdhc1 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	bus-width = <8>;
	non-removable;
	status = "okay";
};

&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	bus-width = <4>;
	cd-gpios = <&gpio2 12 GPIO_ACTIVE_LOW>;
	vmmc-supply = <&reg_usdhc2_vmmc>;
	status = "okay";
};

&usb3_phy0 {
	status = "okay";
};

&usb3_0 {
	status = "okay";
};

&usb_dwc3_0 {
	status = "okay";
	dr_mode = "peripheral";
};

&usb3_phy1 {
	status = "okay";
};

&usb3_1 {
	status = "okay";
};

&usb_dwc3_1 {
	status = "okay";
	dr_mode = "host";
};

&sai2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai2>;
	assigned-clocks = <&clk IMX8MQ_CLK_SAI2_SRC>,
			<&clk IMX8MQ_AUDIO_PLL1>,
			<&clk IMX8MQ_CLK_SAI2_PRE_DIV>,
			<&clk IMX8MQ_CLK_SAI2_DIV>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <0>, <786432000>, <98306000>, <24576000>;
	status = "okay";
};

&gpu {
	status = "okay";
};

&vpu {
	status = "okay";
};

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};
